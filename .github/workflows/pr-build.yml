name: Build zip for PR
on:
  pull_request
jobs:
#  build:
#    name: Build zip for PR
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Build
#        id: build
#        uses: woocommerce/action-build@v2
#      - name: Upload PR zip
#        uses: actions/upload-artifact@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          name: woocommerce.zip
#          path: ${{ steps.build.outputs.zip_path }}
#          retention-days: 7

  test:
    name: PHP ${{ matrix.php }} WP ${{ matrix.wp }} unit tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        php: [ '7.0', '7.1', '7.2', '7.3', '7.4', '8.0' ]
        php: [ '7.0' ]
        wp: [ "latest" ]
    services:
      database:
        image: mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          extensions: mysql
          coverage: none

      - name: Tool versions
        run: |
          php --version
          composer --version

#      - name: Get cached composer directories
#        uses: actions/cache@v2
#        with:
#          path: |
#                ./packages
#                ./vendor
#          key: ${{ runner.os }}-${{ hashFiles('./composer.lock') }}

      - name: Setup and install composer
        run: composer install

      - name: Init DB and WP
        run: ./tests/bin/install.sh woo_test root root 127.0.0.1 ${{ matrix.wp }}

      - name: Run tests
        run: ./vendor/bin/phpunit -c ./phpunit.xml
